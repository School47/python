# 3. Написать функцию thesaurus(), принимающую в качестве аргументов имена сотрудников и возвращающую словарь,
# в котором ключи — первые буквы имен, а значения — списки, содержащие имена,
#
# начинающиеся с соответствующей буквы. Например:
# >>> >>> thesaurus("Иван", "Мария", "Петр", "Илья")
# {
#     "И": ["Иван", "Илья"],
#     "М": ["Мария"], "П": ["Петр"]
# }
# Подумайте: полезен ли будет вам оператор распаковки? Сможете ли вы вернуть отсортированный по ключам словарь?


def thesaurus(args):

    """
    Принимает сотрудников, возвращает словарь
    в котором ключи - первые буквы имен,
    а значения = списки, содержащие имена,
    начинающиес с соответсвующей буквы
    """
    usersdic = {}
    for argindex in range(0, len(args)):
        if usersdic.get(args[argindex][0]) is None:  #такого ключа еще нет в словаре
            usersdic[args[argindex][0]] = [args[argindex]] #ключ - строка, значение - список
        else: #ключ уже есть в словаре
            old_record = usersdic.get(args[argindex][0])
            new_name = [args[argindex]]
            new_record = old_record + new_name
            usersdic[args[argindex][0]] = new_record # старое + новое значение
    return usersdic


names = ["Иван", "Мария", "Петр", "Илья", "Пенелоппа", "Анастасия", "Инна"]
print(f'***   отправляем в функцию thesaurus() список: {names}   ***')
result = thesaurus(names)
print('***   выводим словарь - результат работы функции:   ***')
print(result)
