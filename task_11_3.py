# Создать собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
# Проверить работу исключения на реальном примере.
# Запрашивать у пользователя данные и заполнять список необходимо только числами.
# Класс-исключение должен контролировать типы данных элементов списка.
#
# Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно,
# пока пользователь сам не остановит работу скрипта, введя, например, команду «stop».
# При этом скрипт завершается, сформированный список с числами выводится на экран.

# Подсказка: для этого задания примем, что пользователь может вводить только числа и строки.
# Во время ввода пользователем очередного элемента необходимо реализовать проверку типа элемента.
# Вносить его в список, только если введено число.
# Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить соответствующее сообщение.
# При этом работа скрипта не должна завершаться.


class Bcolors:  # простой класс для хранения стилей строк.
    HEADER = '\033[95m'
    OKBLUE = '\033[94m'
    OKCYAN = '\033[96m'
    OKGREEN = '\033[92m'
    WARNING = '\033[93m'
    FAIL = '\033[91m'
    ENDC = '\033[0m'
    BOLD = '\033[1m'
    UNDERLINE = '\033[4m'


class OwnError(Exception):
    def __init__(self, txt):
        self.txt = txt


def it_is_digit(some_string):
    """
    проверяет строку на число
    :param some_string: проверочная строка
    :return: True, если число, False если не число.

    """
    if len(some_string) == 0:
        return False
    if some_string[0] == '-' or some_string[0] == '+':  # если есть минус или плюс в начале - удаляем
        some_string = some_string[1:]
    if some_string.count('.') > 1:  # точек больше чем 1
        return False
    if len(some_string) > 0 and some_string.replace('.', '').isdigit():
        return True


result_list = []
stop_list = ['', 'stop', 'хватит', 'астанавитесь', 'горшочек не вари', 'это конец', 'может хватит уже',
             'стой', 'приказ 66', 'тормоз', 'харе', 'замереть', 'замри', 'ни с места!', 'ни шагу дальше!',
             'хальт', 'не двигаться', 'мне только спросить', 'сим-сим закройся', 'будь проклят тот день '
                                                                                 'когда я сел за баранку этого пылесоса!',
             'боже мой, боже мой! для чего ты меня оставил?']
input_data = 'Радуйтесь!'
while input_data.lower() not in stop_list:
    input_data = input(f'Введите число в список: ')
    try:
        if input_data.lower() in stop_list:
            print(f'Выводим список: {result_list}')
            exit(66)

        if not it_is_digit(input_data):
            raise OwnError(
                f'{Bcolors.FAIL} Это не число, в список попадают только числа!{Bcolors.ENDC}')  # вызываем собственный класс-исключение
    except OwnError as err:
        print(err)
    else:
        result_list.append(input_data)
        print(f'{Bcolors.OKGREEN}Число {input_data} добавлено в список.{Bcolors.ENDC}')
