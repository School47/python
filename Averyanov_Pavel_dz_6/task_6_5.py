# Есть два файла: в одном хранятся ФИО пользователей сайта, а в другом  — данные об их хобби.
# Известно, что при хранении данных используется принцип: одна строка — один пользователь,
# разделитель между значениями — запятая.
# Написать код, загружающий данные из обоих файлов и формирующий из них словарь: к
# лючи — ФИО, значения — данные о хобби. Сохранить словарь в файл. Проверить сохранённые данные.
# Если в файле, хранящем данные о хобби, меньше записей, чем в файле с ФИО, задаём в словаре значение None.
# Если наоборот — выходим из скрипта с кодом «1».
# При решении задачи считать, что объём данных в файлах во много раз меньше объема ОЗУ.

# Фрагмент файла с данными о пользователях (users.csv):
# Иванов,Иван,Иванович
# Петров,Петр,Петрович
#
# Фрагмент файла с данными о хобби  (hobby.csv):
# скалолазание,охота
# горные лыжи
#
# *(вместо 3) Решить задачу 3 для ситуации, когда объём данных в файлах превышает объём ОЗУ
# (разумеется, не нужно реально создавать такие большие файлы, это просто задел на будущее проекта).
# Только теперь не нужно создавать словарь с данными. Вместо этого нужно сохранить объединенные данные в новый файл
# (users_hobby.txt). Хобби пишем через двоеточие и пробел после ФИО:
# Иванов,Иван,Иванович: скалолазание,охота
# Петров,Петр,Петрович: горные лыжи
#
#
# **(вместо 4) Решить задачу 4 и реализовать интерфейс командной строки,
# чтобы можно было задать имя обоих исходных файлов и имя выходного файла. Проверить работу скрипта.
import sys

filename_users = 'users.csv'
filename_hobby = 'hobby.csv'
filename_users_hobby = 'users_hobby.txt'
total_arguments = len(sys.argv[1:]) #всего параметров передано через терминал
if total_arguments > 0:
    filename_users = sys.argv[1]
if total_arguments > 1:
    filename_hobby = sys.argv[2]
if total_arguments > 2:
    filename_users_hobby = sys.argv[3] #если есть параметры, применяем их к именам файлов

file_1 = open(filename_users, 'r', encoding='utf-8')
line_1 = file_1.readline().rstrip('\n')
file_2 = open(filename_hobby, 'r', encoding='utf-8')
line_2 = file_2.readline().rstrip('\n')
if not line_1 and line_2:
    file_1.close()
    file_2.close()
    exit(1)  # данных с ФИО вообще нет, данные о хобби есть.
file_3 = open(filename_users_hobby, 'w', encoding='utf-8')

while line_1 or line_2:
    if not line_1 and line_2:
        file_1.close()
        file_2.close()
        file_3.close()
        exit(1) # данных с ФИО меньше чем данных о хобби - выходим с кодом 1
    elif not line_2:
        line_2 = None # данных с хобби меньше чем данных с фио, вместо хобби будет None
    print(f'{line_1}: {line_2}', file=file_3)
    # print(f'{line_1}: {line_2}')
    line_1 = file_1.readline().rstrip('\n')
    line_2 = file_2.readline().rstrip('\n')
file_1.close()
file_2.close()
file_3.close()
